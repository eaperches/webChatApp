[{"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\index.js":"1","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\App.js":"2","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\reportWebVitals.js":"3","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\Chat.js":"4","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\Home.js":"5","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\SignOut.js":"6","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\SignIn.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":439,"mtime":1609378047898,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4177,"mtime":1609373328548,"results":"12","hashOfConfig":"9"},{"size":3287,"mtime":1609377916965,"results":"13","hashOfConfig":"9"},{"size":668,"mtime":1609373328553,"results":"14","hashOfConfig":"9"},{"size":794,"mtime":1609373328552,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1sivvsl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\index.js",[],["32","33"],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\App.js",[],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\reportWebVitals.js",[],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\Chat.js",["34"],"import React, { useRef, useState } from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nimport './Chat.css';\r\nimport SignOut from './SignOut';\r\nimport SignIn from './SignIn';\r\n\r\n/*icons*/\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport userIcon from \"./img/user.png\"\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyBXhjWHf0Nq7-Ei5mxUSZ0iilsx43DQyeE\",\r\n    authDomain: \"webchat-aaed6.firebaseapp.com\",\r\n    projectId: \"webchat-aaed6\",\r\n    storageBucket: \"webchat-aaed6.appspot.com\",\r\n    messagingSenderId: \"508324246470\",\r\n    appId: \"1:508324246470:web:b49eb6f7d75f561871b8c7\",\r\n    measurementId: \"G-NB5MPG9FX0\"\r\n  });\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction Chat(props) {\r\n  const [user] = useAuthState(auth);\r\n\r\n  // Get the current chat room ID from the url\r\n  const {chatId} = props.match.params;\r\n  return (\r\n    <div className=\"Chat\">\r\n      <header>\r\n        <h1>⚛️</h1>\r\n        <SignOut />\r\n      </header>\r\n\r\n      <section>\r\n        {user ? <ChatRoom chatId={chatId}/> : <SignIn />}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ChatRoom(props) {\r\n\r\n  // Authentication for the current user.\r\n  const { displayName, uid, photoURL } = auth.currentUser;\r\n\r\n  const attentionSeeker = useRef(\"attentionSeeker\");\r\n\r\n  const memberRef = firestore.collection('members');\r\n  const memberQuery = memberRef.where('userId', '==', uid)\r\n    .where('roomId', '==', props.chatId)\r\n    .where('status', '==', 1);\r\n  const [memberAccess] = useCollectionData(memberQuery, {idField: 'id'});\r\n\r\n  const messagesRef = firestore.collection('messages');\r\n  const messageQuery = messagesRef.where('chatId', '==', props.chatId).orderBy('createdAt').limit(25);\r\n  const [messages] = useCollectionData(messageQuery, {idField: 'id'});\r\n\r\n  const lastMessage = messages == null ? null : messages[messages.length - 1];\r\n\r\n  const timeLimit = 2*60; //timelimit to determine whether to put the name above message or not\r\n\r\n  const [formValue, setFormValue] = useState(''); //useState hook is used to give states to functional components. In class components this is not needed.\r\n\r\n  const sendMessage = async(e) => { //async functions allow us to use \"await\"\r\n\r\n    e.preventDefault(); //prevents page from reloading when form is submitted\r\n\r\n    await messagesRef.add({\r\n      chatId: props.chatId,\r\n      name: lastMessage && (lastMessage.uid !== uid || Date.now()/1000 - lastMessage.createdAt.seconds > timeLimit  )  ?  displayName : null,\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL,\r\n    })\r\n\r\n    setFormValue('');\r\n\r\n    attentionSeeker.current.scrollIntoView({ behavior: \"smooth\"});\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {memberAccess && memberAccess.length > 0 ? (\r\n          <>\r\n            <main>\r\n              {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n              <div ref={attentionSeeker}></div>\r\n            </main>\r\n\r\n            <form onSubmit={sendMessage}>\r\n\r\n              <input value={formValue} placeholder=\"Enter Message\" onChange={(e) => setFormValue(e.target.value)}/>\r\n\r\n              <button type=\"submit\" disabled={!formValue}><IoMdSend /></button>\r\n\r\n\r\n\r\n            </form>\r\n          </>\r\n        ) : (\r\n\r\n          <main>\r\n            <h1>{memberAccess ? \"You do not have access to this chat.\" : \"Loading...\"}</h1>\r\n          </main>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChatMessage(props){\r\n  const { name, text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n      <div className={`message ${messageClass}`}>\r\n        <span>{name}</span>\r\n      </div>\r\n\r\n      <div className={`message ${messageClass}`}>\r\n        <img alt={name} src={ photoURL || userIcon } />\r\n        <p>{text}</p>\r\n      </div>\r\n    </>)\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\Home.js",[],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\SignOut.js",[],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\SignIn.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":99,"column":45,"nodeType":"41","messageId":"42","endLine":99,"endColumn":47},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]