[{"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\index.js":"1","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\App.js":"2","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":3093,"mtime":1608485392330,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1sivvsl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\index.js",[],["17","18"],"C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\App.js",["19"],"import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\n/*icons*/\r\nimport { IoMdSend } from \"react-icons/io\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyBXhjWHf0Nq7-Ei5mxUSZ0iilsx43DQyeE\",\r\n    authDomain: \"webchat-aaed6.firebaseapp.com\",\r\n    projectId: \"webchat-aaed6\",\r\n    storageBucket: \"webchat-aaed6.appspot.com\",\r\n    messagingSenderId: \"508324246470\",\r\n    appId: \"1:508324246470:web:b49eb6f7d75f561871b8c7\",\r\n    measurementId: \"G-NB5MPG9FX0\"\r\n  });\r\n}else {\r\n  firebase.app();\r\n}\r\n\r\n\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>⚛️</h1>\r\n        <SignOut />\r\n      </header>\r\n\r\n      <section>\r\n        {user ? <ChatRoom /> : <SignIn />}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return(\r\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button onClick={() => auth.signOut()}>Sign Out</button>\r\n  )\r\n}\r\n\r\nfunction ChatRoom() {\r\n\r\n  const attentionSeeker = useRef(\"attentionSeeker\");\r\n\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n  const [messages] = useCollectionData(query, {idField: 'id'});\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n  const sendMessage = async(e) => { //async functions allow us to use \"await\"\r\n\r\n    e.preventDefault(); //prevents page from reloading when form is submitted\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n\r\n    attentionSeeker.current.scrollIntoView({ behavior: \"smooth\"});\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n        <div ref={attentionSeeker}></div>\r\n      </main>\r\n\r\n      <form onSubmit={sendMessage}>\r\n\r\n        <input value={formValue} placeholder=\"Enter Message\" onChange={(e) => setFormValue(e.target.value)}/>\r\n\r\n        <button type=\"submit\" disabled={!formValue}><IoMdSend /></button>\r\n\r\n\r\n\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction ChatMessage(props){\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'sent';\r\n\r\n  return (\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={ photoURL } style={{borderRadius: \"50%\"}} />\r\n      <p>{text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\eaper\\Desktop\\CS\\Projects\\chat\\src\\reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":123,"column":7,"nodeType":"28","endLine":123,"endColumn":61},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["31"],["32"],"no-global-assign","no-unsafe-negation"]